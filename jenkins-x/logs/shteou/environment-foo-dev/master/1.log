
Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-credential-initializer-6m757[0m
{"level":"info","ts":1588007349.7928193,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1588007349.7973387,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-working-dir-initializer-kmmwk[0m
{"level":"info","ts":1588007351.866665,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1588007351.874251,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-place-tools[0m

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-git-source-shteou-environment-foo-dev-mast-wggws-9b2cf[0m
{"level":"info","ts":1588007431.827301,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1588007434.1565769,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/******/environment-foo-dev.git @ v0.0.3 in path /workspace/source"}

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:ef69844e0f9a7a66aaac36a3adedb3be6708d730
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-validate-git[0m
Git configured for user: jenkins-x-bot and email jenkins-x@googlegroups.com

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-verify-preinstall[0m
** boot has only been validated on GKE and EKS, we'd love feedback and contributions for other Kubernetes providers
Running in Batch Mode, execution will continue
writing the following to the OWNERS file for the development environment repository:
approvers:
- ******
reviewers:
- ******
WARNING: TLS is not enabled so your webhooks will be called using HTTP. This means your webhook secret will be sent to your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
Verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
Trying to lazily create any missing resources to get the current cluster ready to boot Jenkins X
Verifying Ingress...

Using namespace '**' from context named '' on server ''.

Verifying the CLI packages using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.434
using version 2.1.10 of **
CLI packages kubectl, git, helm seem to be setup correctly
NAME               VERSION
**                 2.1.10
Kubernetes cluster v1.15.11
kubectl            v1.16.0
helm client        2.14.3
git                2.21.1

Verifying Storage...
Storage configuration looks good

Helm installed and configured
Ensuring Helm chart repository https://storage.googleapis.com/chartmuseum.jenkins-x.io is configured
Cluster looks good, you are ready to '** boot' now!


Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-jx-crds[0m
Jenkins X CRDs upgraded with success

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-velero[0m
Modified file /workspace/source/systems/velero/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-velero
lock configmap **-lock-velero created
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.434
cleaning the lock configmap **-lock-velero

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-velero-backups[0m
Modified file /workspace/source/systems/velero-backups/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-velero
lock configmap **-lock-velero created
Ignoring templates/default-backup.yaml
No requirements file: /tmp/**-helm-apply-734048937/velero-backups/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-velero

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-nginx-controller[0m
Modified file /workspace/source/systems/**ing/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-kube-system
lock configmap **-lock-kube-system created
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.434

cleaning the lock configmap **-lock-kube-system

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-create-install-values[0m

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-external-dns[0m
Modified file /workspace/source/systems/external-dns/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.434
Adding missing Helm repo: charts.bitnami.com https://charts.bitnami.com/bitnami
Successfully added Helm repository charts.bitnami.com.
cleaning the lock configmap **-lock-**

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-cert-manager-crds[0m
customresourcedefinition.apiextensions.k8s.io/challenges.acme.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/orders.acme.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/clusterissuers.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/issuers.cert-manager.io configured

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-cert-manager[0m
Modified file /workspace/source/systems/cm/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-cert-manager
lock configmap **-lock-cert-manager created
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.434
Adding missing Helm repo: charts.jetstack.io https://charts.jetstack.io
Successfully added Helm repository charts.jetstack.io.
cleaning the lock configmap **-lock-cert-manager

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-acme-issuer-and-certificate[0m
Modified file /workspace/source/systems/acme/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/cert-manager-prod-certificate.yaml
Ignoring templates/cert-manager-prod-issuer.yaml
Ignoring templates/cert-manager-staging-certificate.yaml
Ignoring templates/cert-manager-staging-issuer.yaml
No requirements file: /tmp/**-helm-apply-505465841/acme/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-**

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-vault[0m
Not attempting to boot Vault as using secret storage: local

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-create-helm-values[0m
defaulting to secret storage scheme local found from requirements file at /workspace/source/**-requirements.yml
defaulting to secret base path to the cluster name foo found from requirements file at /workspace/source/**-requirements.yml
generated schema file /workspace/source/env/parameters.schema.json from template /workspace/source/env/parameters.tmpl.schema.json
Jenkins X Admin Username ***** [Automatically accepted existing value]
Jenkins X Admin Password *** [Automatically accepted existing value]
Pipeline bot Git username ****** [Automatically accepted existing value]
Pipeline bot Git email address ******@gmail.com [Automatically accepted existing value]
Pipeline bot Git token *** [Automatically accepted existing value]
HMAC token, used to validate incoming webhooks. Press enter to use the generated token *** [Automatically accepted existing value]
Do you want to configure an external Docker Registry? false [Automatically accepted existing value]

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-create-jx-auth-config[0m
Saved the rendered configuration into templates/**-auth-configmap.yaml file

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-jx-auth-config[0m
Modified file /workspace/source/systems/**-auth/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/**-auth-configmap.yaml
No requirements file: /tmp/**-helm-apply-625646595/**-auth/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-**

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-jenkins-x[0m
Modified file /workspace/source/env/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/.gitignore
Applying the kubernetes overrides at ../kubeProviders/kubernetes/values.tmpl.yaml
Verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.434
Adding missing Helm repo: chartmuseum.jenkins-x.io http://chartmuseum.jenkins-x.io
Successfully added Helm repository chartmuseum.jenkins-x.io.

cleaning the lock configmap **-lock-**

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-verify-jenkins-x-environment[0m
Storing the requirements in team settings in the dev environment
Validating git repository for dev environment at URL https://github.com/******/environment-foo-dev.git
Validating git repository for production environment at URL https://github.com/******/environment-foo-production.git
Using Git provider github at https://github.com
? Using Git user name: ******
? Using organisation: ******
Creating repository ******/environment-foo-production
Git repository ******/environment-foo-production already exists
Pushed Git repository to https://github.com/******/environment-foo-production

Validating git repository for staging environment at URL https://github.com/******/environment-foo-staging.git
Using Git provider github at https://github.com
? Using Git user name: ******
? Using organisation: ******
Creating repository ******/environment-foo-staging
Git repository ******/environment-foo-staging already exists
Pushed Git repository to https://github.com/******/environment-foo-staging

Environment git repositories look good


Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-repositories[0m
Modified file /workspace/source/repositories/Chart.yaml to set the chart to version 1
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/default-group.yaml
No requirements file: /tmp/**-helm-apply-155419192/repositories/requirements.yaml so not checking for missing versions
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x-chartmuseum http://jenkins-x-chartmuseum:8080
Successfully added Helm repository jenkins-x-chartmuseum.

cleaning the lock configmap **-lock-**

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-install-pipelines[0m

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-update-webhooks[0m
DEBUG: Finding service url for hook in namespace **
DEBUG: Couldn't find service url, attempting to look up via ingress
DEBUG: found service url http://hook-**.cd.futurete.ch
Updating webhooks for Owner: ****** and Repository: environment-foo-dev in git server: https://github.com
Checking hooks for repository ******/environment-foo-dev with user ******
Found matching hook for url http://hook-**.cd.futurete.ch/hook
Updating GitHub webhook for ******/environment-foo-dev for url http://hook-**.cd.futurete.ch/hook
Updating webhooks for Owner: ****** and Repository: environment-foo-production in git server: https://github.com
Checking hooks for repository ******/environment-foo-production with user ******
Found matching hook for url http://hook-**.cd.futurete.ch/hook
Updating GitHub webhook for ******/environment-foo-production for url http://hook-**.cd.futurete.ch/hook
Updating webhooks for Owner: ****** and Repository: environment-foo-staging in git server: https://github.com
Checking hooks for repository ******/environment-foo-staging with user ******
Found matching hook for url http://hook-**.cd.futurete.ch/hook
Updating GitHub webhook for ******/environment-foo-staging for url http://hook-**.cd.futurete.ch/hook
Updating webhooks for Owner: ****** and Repository: test-service in git server: https://github.com
Checking hooks for repository ******/test-service with user ******
Found matching hook for url http://hook-**.cd.futurete.ch/hook
Updating GitHub webhook for ******/test-service for url http://hook-**.cd.futurete.ch/hook

Showing logs for build [32mshteou-environment-foo-dev-mast-wggws-1[0m stage [32mrelease[0m and container [32mstep-verify-installation[0m
verifying the Jenkins X installation in namespace **
verifying pods
Checking pod statuses
POD                                         STATUS
crier-76bb69cdcc-wq8zk                      Running
deck-6d894bd6c-jzp7w                        Running
deck-6d894bd6c-vhn6w                        Running
hook-68777d88c7-vk8wj                       Running
hook-68777d88c7-wvr7s                       Running
horologium-7ffb6d7cfd-px9mk                 Running
jenkins-6bc84f78b8-pfjkc                    Running
jenkins-x-chartmuseum-5459d54d46-hmw7j      Running
jenkins-x-controllerbuild-6f499c9c8c-xvlnv  Running
jenkins-x-controllerrole-5675b5d9b5-pkgqn   Running
jenkins-x-docker-registry-59547474fb-542rq  Running
jenkins-x-gcactivities-1588006800-fg5dz     Succeeded
jenkins-x-gcpods-1588006800-qs9sz           Succeeded
jenkins-x-heapster-86b88b86df-qft2f         Running
jenkins-x-nexus-c7c5477ff-f5npx             Running
pipeline-599c968cc5-9bwxj                   Running
pipelinerunner-6f5d8d5574-ldxnh             Running
tekton-pipelines-controller-566bfd578-pf86c Running
tide-5f6df69548-5ztxm                       Running
Verifying the git config
Verifying username ****** at git server github at https://github.com
Found 2 organisations in git server https://github.com: ccycloud, youknowidontspeakspanish
Validated pipeline user ****** on git server https://github.com
Git tokens seem to be setup correctly
Installation is currently looking: GOOD
